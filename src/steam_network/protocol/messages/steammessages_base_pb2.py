# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: steammessages_base.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18steammessages_base.proto\x1a google/protobuf/descriptor.proto\"1\n\rCMsgIPAddress\x12\x0c\n\x02v4\x18\x01 \x01(\x07H\x00\x12\x0c\n\x02v6\x18\x02 \x01(\x0cH\x00\x42\x04\n\x02ip\"R\n\x13\x43MsgIPAddressBucket\x12+\n\x13original_ip_address\x18\x01 \x01(\x0b\x32\x0e.CMsgIPAddress\x12\x0e\n\x06\x62ucket\x18\x02 \x01(\x06\"O\n\x1b\x43MsgGCRoutingProtoBufHeader\x12\x16\n\x0e\x64st_gcid_queue\x18\x01 \x01(\x04\x12\x18\n\x10\x64st_gc_dir_index\x18\x02 \x01(\r\"\xf6\x07\n\x12\x43MsgProtoBufHeader\x12\x0f\n\x07steamid\x18\x01 \x01(\x06\x12\x18\n\x10\x63lient_sessionid\x18\x02 \x01(\x05\x12\x15\n\rrouting_appid\x18\x03 \x01(\r\x12*\n\x0cjobid_source\x18\n \x01(\x06:\x14\x31\x38\x34\x34\x36\x37\x34\x34\x30\x37\x33\x37\x30\x39\x35\x35\x31\x36\x31\x35\x12*\n\x0cjobid_target\x18\x0b \x01(\x06:\x14\x31\x38\x34\x34\x36\x37\x34\x34\x30\x37\x33\x37\x30\x39\x35\x35\x31\x36\x31\x35\x12\x17\n\x0ftarget_job_name\x18\x0c \x01(\t\x12\x0f\n\x07seq_num\x18\x18 \x01(\x05\x12\x12\n\x07\x65result\x18\r \x01(\x05:\x01\x32\x12\x15\n\rerror_message\x18\x0e \x01(\t\x12\x1a\n\x12\x61uth_account_flags\x18\x10 \x01(\r\x12\x14\n\x0ctoken_source\x18\x16 \x01(\r\x12\x1b\n\x13\x61\x64min_spoofing_user\x18\x17 \x01(\x08\x12\x1a\n\x0ftransport_error\x18\x11 \x01(\x05:\x01\x31\x12\'\n\tmessageid\x18\x12 \x01(\x04:\x14\x31\x38\x34\x34\x36\x37\x34\x34\x30\x37\x33\x37\x30\x39\x35\x35\x31\x36\x31\x35\x12\x1a\n\x12publisher_group_id\x18\x13 \x01(\r\x12\r\n\x05sysid\x18\x14 \x01(\r\x12\x11\n\ttrace_tag\x18\x15 \x01(\x04\x12\x15\n\rwebapi_key_id\x18\x19 \x01(\r\x12\x1f\n\x17is_from_external_source\x18\x1a \x01(\x08\x12\x18\n\x10\x66orward_to_sysid\x18\x1b \x03(\r\x12\x10\n\x08\x63m_sysid\x18\x1c \x01(\r\x12\x18\n\rlauncher_type\x18\x1f \x01(\r:\x01\x30\x12\x10\n\x05realm\x18  \x01(\r:\x01\x30\x12\x16\n\ntimeout_ms\x18! \x01(\x05:\x02-1\x12\x14\n\x0c\x64\x65\x62ug_source\x18\" \x01(\t\x12!\n\x19\x64\x65\x62ug_source_string_index\x18# \x01(\r\x12\x10\n\x08token_id\x18$ \x01(\x04\x12\x30\n\nrouting_gc\x18% \x01(\x0b\x32\x1c.CMsgGCRoutingProtoBufHeader\x12\x61\n\x13session_disposition\x18& \x01(\x0e\x32\'.CMsgProtoBufHeader.ESessionDisposition:\x1bk_ESessionDispositionNormal\x12\x10\n\x08wg_token\x18\' \x01(\t\x12\x0c\n\x02ip\x18\x0f \x01(\rH\x00\x12\x0f\n\x05ip_v6\x18\x1d \x01(\x0cH\x00\"[\n\x13\x45SessionDisposition\x12\x1f\n\x1bk_ESessionDispositionNormal\x10\x00\x12#\n\x1fk_ESessionDispositionDisconnect\x10\x01\x42\t\n\x07ip_addr\"8\n\tCMsgMulti\x12\x15\n\rsize_unzipped\x18\x01 \x01(\r\x12\x14\n\x0cmessage_body\x18\x02 \x01(\x0c\"+\n\x13\x43MsgProtobufWrapped\x12\x14\n\x0cmessage_body\x18\x01 \x01(\x0c\"\xbb\x01\n\x0e\x43MsgAuthTicket\x12\x0e\n\x06\x65state\x18\x01 \x01(\r\x12\x12\n\x07\x65result\x18\x02 \x01(\r:\x01\x32\x12\x0f\n\x07steamid\x18\x03 \x01(\x06\x12\x0e\n\x06gameid\x18\x04 \x01(\x06\x12\x14\n\x0ch_steam_pipe\x18\x05 \x01(\r\x12\x12\n\nticket_crc\x18\x06 \x01(\r\x12\x0e\n\x06ticket\x18\x07 \x01(\x0c\x12\x15\n\rserver_secret\x18\x08 \x01(\x0c\x12\x13\n\x0bticket_type\x18\t \x01(\r\"\xeb\x02\n\x14\x43\x43\x44\x44\x42\x41ppDetailCommon\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04icon\x18\x03 \x01(\t\x12\x0c\n\x04tool\x18\x06 \x01(\x08\x12\x0c\n\x04\x64\x65mo\x18\x07 \x01(\x08\x12\r\n\x05media\x18\x08 \x01(\x08\x12\x1f\n\x17\x63ommunity_visible_stats\x18\t \x01(\x08\x12\x15\n\rfriendly_name\x18\n \x01(\t\x12\x13\n\x0bpropagation\x18\x0b \x01(\t\x12\x19\n\x11has_adult_content\x18\x0c \x01(\x08\x12!\n\x19is_visible_in_steam_china\x18\r \x01(\x08\x12\x10\n\x08\x61pp_type\x18\x0e \x01(\r\x12\x1d\n\x15has_adult_content_sex\x18\x0f \x01(\x08\x12\"\n\x1ahas_adult_content_violence\x18\x10 \x01(\x08\x12\x1d\n\x15\x63ontent_descriptorids\x18\x11 \x03(\r\"\xb3\x03\n\rCMsgAppRights\x12\x11\n\tedit_info\x18\x01 \x01(\x08\x12\x0f\n\x07publish\x18\x02 \x01(\x08\x12\x17\n\x0fview_error_data\x18\x03 \x01(\x08\x12\x10\n\x08\x64ownload\x18\x04 \x01(\x08\x12\x15\n\rupload_cdkeys\x18\x05 \x01(\x08\x12\x17\n\x0fgenerate_cdkeys\x18\x06 \x01(\x08\x12\x17\n\x0fview_financials\x18\x07 \x01(\x08\x12\x12\n\nmanage_ceg\x18\x08 \x01(\x08\x12\x16\n\x0emanage_signing\x18\t \x01(\x08\x12\x15\n\rmanage_cdkeys\x18\n \x01(\x08\x12\x16\n\x0e\x65\x64it_marketing\x18\x0b \x01(\x08\x12\x17\n\x0f\x65\x63onomy_support\x18\x0c \x01(\x08\x12\"\n\x1a\x65\x63onomy_support_supervisor\x18\r \x01(\x08\x12\x16\n\x0emanage_pricing\x18\x0e \x01(\x08\x12\x16\n\x0e\x62roadcast_live\x18\x0f \x01(\x08\x12\x1e\n\x16view_marketing_traffic\x18\x10 \x01(\x08\x12\"\n\x1a\x65\x64it_store_display_content\x18\x11 \x01(\x08\"\xf1\x02\n\x13\x43\x43uratorPreferences\x12\x1b\n\x13supported_languages\x18\x01 \x01(\r\x12\x18\n\x10platform_windows\x18\x02 \x01(\x08\x12\x14\n\x0cplatform_mac\x18\x03 \x01(\x08\x12\x16\n\x0eplatform_linux\x18\x04 \x01(\x08\x12\x12\n\nvr_content\x18\x05 \x01(\x08\x12\x1e\n\x16\x61\x64ult_content_violence\x18\x06 \x01(\x08\x12\x19\n\x11\x61\x64ult_content_sex\x18\x07 \x01(\x08\x12\x19\n\x11timestamp_updated\x18\x08 \x01(\r\x12\x16\n\x0etagids_curated\x18\t \x03(\r\x12\x17\n\x0ftagids_filtered\x18\n \x03(\r\x12\x15\n\rwebsite_title\x18\x0b \x01(\t\x12\x13\n\x0bwebsite_url\x18\x0c \x01(\t\x12\x16\n\x0e\x64iscussion_url\x18\r \x01(\t\x12\x16\n\x0eshow_broadcast\x18\x0e \x01(\x08\"@\n\x12\x43LocalizationToken\x12\x10\n\x08language\x18\x01 \x01(\r\x12\x18\n\x10localized_string\x18\x02 \x01(\t\"\xec\x01\n\x17\x43\x43lanEventUserNewsTuple\x12\x0e\n\x06\x63lanid\x18\x01 \x01(\r\x12\x11\n\tevent_gid\x18\x02 \x01(\x06\x12\x18\n\x10\x61nnouncement_gid\x18\x03 \x01(\x06\x12\x13\n\x0brtime_start\x18\x04 \x01(\r\x12\x11\n\trtime_end\x18\x05 \x01(\r\x12\x16\n\x0epriority_score\x18\x06 \x01(\r\x12\x0c\n\x04type\x18\x07 \x01(\r\x12\x18\n\x10\x63lamp_range_slot\x18\x08 \x01(\r\x12\r\n\x05\x61ppid\x18\t \x01(\r\x12\x1d\n\x15rtime32_last_modified\x18\n \x01(\r\"\x80\x01\n\x16\x43\x43lanMatchEventByRange\x12\x14\n\x0crtime_before\x18\x01 \x01(\r\x12\x13\n\x0brtime_after\x18\x02 \x01(\r\x12\x11\n\tqualified\x18\x03 \x01(\r\x12(\n\x06\x65vents\x18\x04 \x03(\x0b\x32\x18.CClanEventUserNewsTuple\"\x9b\x03\n\x1f\x43\x43ommunity_ClanAnnouncementInfo\x12\x0b\n\x03gid\x18\x01 \x01(\x04\x12\x0e\n\x06\x63lanid\x18\x02 \x01(\x04\x12\x10\n\x08posterid\x18\x03 \x01(\x04\x12\x10\n\x08headline\x18\x04 \x01(\t\x12\x10\n\x08posttime\x18\x05 \x01(\r\x12\x12\n\nupdatetime\x18\x06 \x01(\r\x12\x0c\n\x04\x62ody\x18\x07 \x01(\t\x12\x14\n\x0c\x63ommentcount\x18\x08 \x01(\x05\x12\x0c\n\x04tags\x18\t \x03(\t\x12\x10\n\x08language\x18\n \x01(\x05\x12\x0e\n\x06hidden\x18\x0b \x01(\x08\x12\x16\n\x0e\x66orum_topic_id\x18\x0c \x01(\x06\x12\x11\n\tevent_gid\x18\r \x01(\x06\x12\x13\n\x0bvoteupcount\x18\x0e \x01(\x05\x12\x15\n\rvotedowncount\x18\x0f \x01(\x05\x12V\n\x10\x62\x61n_check_result\x18\x10 \x01(\x0e\x32\x17.EBanContentCheckResult:#k_EBanContentCheckResult_NotScanned\x12\x0e\n\x06\x62\x61nned\x18\x11 \x01(\x08\"\xa6\x06\n\x0e\x43\x43lanEventData\x12\x0b\n\x03gid\x18\x01 \x01(\x06\x12\x14\n\x0c\x63lan_steamid\x18\x02 \x01(\x06\x12\x12\n\nevent_name\x18\x03 \x01(\t\x12;\n\nevent_type\x18\x04 \x01(\x0e\x32\x14.EProtoClanEventType:\x11k_EClanOtherEvent\x12\r\n\x05\x61ppid\x18\x05 \x01(\r\x12\x16\n\x0eserver_address\x18\x06 \x01(\t\x12\x17\n\x0fserver_password\x18\x07 \x01(\t\x12\x1a\n\x12rtime32_start_time\x18\x08 \x01(\r\x12\x18\n\x10rtime32_end_time\x18\t \x01(\r\x12\x15\n\rcomment_count\x18\n \x01(\x05\x12\x17\n\x0f\x63reator_steamid\x18\x0b \x01(\x06\x12\x1b\n\x13last_update_steamid\x18\x0c \x01(\x06\x12\x13\n\x0b\x65vent_notes\x18\r \x01(\t\x12\x10\n\x08jsondata\x18\x0e \x01(\t\x12;\n\x11\x61nnouncement_body\x18\x0f \x01(\x0b\x32 .CCommunity_ClanAnnouncementInfo\x12\x11\n\tpublished\x18\x10 \x01(\x08\x12\x0e\n\x06hidden\x18\x11 \x01(\x08\x12 \n\x18rtime32_visibility_start\x18\x12 \x01(\r\x12\x1e\n\x16rtime32_visibility_end\x18\x13 \x01(\r\x12\x1d\n\x15\x62roadcaster_accountid\x18\x14 \x01(\r\x12\x16\n\x0e\x66ollower_count\x18\x15 \x01(\r\x12\x14\n\x0cignore_count\x18\x16 \x01(\r\x12\x16\n\x0e\x66orum_topic_id\x18\x17 \x01(\x06\x12\x1d\n\x15rtime32_last_modified\x18\x18 \x01(\r\x12\x15\n\rnews_post_gid\x18\x19 \x01(\x06\x12\x1a\n\x12rtime_mod_reviewed\x18\x1a \x01(\r\x12\x1a\n\x12\x66\x65\x61tured_app_tagid\x18\x1b \x01(\r\x12\x19\n\x11referenced_appids\x18\x1c \x03(\r\x12\x10\n\x08\x62uild_id\x18\x1d \x01(\r\x12\x14\n\x0c\x62uild_branch\x18\x1e \x01(\t\"\xc7\x01\n\x10\x43\x42illing_Address\x12\x12\n\nfirst_name\x18\x01 \x01(\t\x12\x11\n\tlast_name\x18\x02 \x01(\t\x12\x10\n\x08\x61\x64\x64ress1\x18\x03 \x01(\t\x12\x10\n\x08\x61\x64\x64ress2\x18\x04 \x01(\t\x12\x0c\n\x04\x63ity\x18\x05 \x01(\t\x12\x10\n\x08us_state\x18\x06 \x01(\t\x12\x14\n\x0c\x63ountry_code\x18\x07 \x01(\t\x12\x10\n\x08postcode\x18\x08 \x01(\t\x12\x11\n\tzip_plus4\x18\t \x01(\x05\x12\r\n\x05phone\x18\n \x01(\t\"\xdb\x01\n\x19\x43PackageReservationStatus\x12\x11\n\tpackageid\x18\x01 \x01(\r\x12\x19\n\x11reservation_state\x18\x02 \x01(\x05\x12\x16\n\x0equeue_position\x18\x03 \x01(\x05\x12\x18\n\x10total_queue_size\x18\x04 \x01(\x05\x12 \n\x18reservation_country_code\x18\x05 \x01(\t\x12\x0f\n\x07\x65xpired\x18\x06 \x01(\x08\x12\x14\n\x0ctime_expires\x18\x07 \x01(\r\x12\x15\n\rtime_reserved\x18\x08 \x01(\r\"/\n\x10\x43MsgKeyValuePair\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"3\n\x0f\x43MsgKeyValueSet\x12 \n\x05pairs\x18\x01 \x03(\x0b\x32\x11.CMsgKeyValuePair\"\xcb\x01\n UserContentDescriptorPreferences\x12[\n\x1e\x63ontent_descriptors_to_exclude\x18\x01 \x03(\x0b\x32\x33.UserContentDescriptorPreferences.ContentDescriptor\x1aJ\n\x11\x43ontentDescriptor\x12\x1c\n\x14\x63ontent_descriptorid\x18\x01 \x01(\r\x12\x17\n\x0ftimestamp_added\x18\x02 \x01(\r*\xd8\x02\n\x16\x45\x42\x61nContentCheckResult\x12\'\n#k_EBanContentCheckResult_NotScanned\x10\x00\x12\"\n\x1ek_EBanContentCheckResult_Reset\x10\x01\x12*\n&k_EBanContentCheckResult_NeedsChecking\x10\x02\x12)\n%k_EBanContentCheckResult_VeryUnlikely\x10\x05\x12%\n!k_EBanContentCheckResult_Unlikely\x10\x1e\x12%\n!k_EBanContentCheckResult_Possible\x10\x32\x12#\n\x1fk_EBanContentCheckResult_Likely\x10K\x12\'\n#k_EBanContentCheckResult_VeryLikely\x10\x64*\xeb\x07\n\x13\x45ProtoClanEventType\x12\x15\n\x11k_EClanOtherEvent\x10\x01\x12\x14\n\x10k_EClanGameEvent\x10\x02\x12\x15\n\x11k_EClanPartyEvent\x10\x03\x12\x17\n\x13k_EClanMeetingEvent\x10\x04\x12\x1c\n\x18k_EClanSpecialCauseEvent\x10\x05\x12\x1c\n\x18k_EClanMusicAndArtsEvent\x10\x06\x12\x16\n\x12k_EClanSportsEvent\x10\x07\x12\x14\n\x10k_EClanTripEvent\x10\x08\x12\x14\n\x10k_EClanChatEvent\x10\t\x12\x1b\n\x17k_EClanGameReleaseEvent\x10\n\x12\x19\n\x15k_EClanBroadcastEvent\x10\x0b\x12\x1b\n\x17k_EClanSmallUpdateEvent\x10\x0c\x12&\n\"k_EClanPreAnnounceMajorUpdateEvent\x10\r\x12\x1b\n\x17k_EClanMajorUpdateEvent\x10\x0e\x12\x1a\n\x16k_EClanDLCReleaseEvent\x10\x0f\x12\x1d\n\x19k_EClanFutureReleaseEvent\x10\x10\x12&\n\"k_EClanESportTournamentStreamEvent\x10\x11\x12\x19\n\x15k_EClanDevStreamEvent\x10\x12\x12\x1c\n\x18k_EClanFamousStreamEvent\x10\x13\x12\x19\n\x15k_EClanGameSalesEvent\x10\x14\x12\x1d\n\x19k_EClanGameItemSalesEvent\x10\x15\x12\x1d\n\x19k_EClanInGameBonusXPEvent\x10\x16\x12\x1a\n\x16k_EClanInGameLootEvent\x10\x17\x12\x1b\n\x17k_EClanInGamePerksEvent\x10\x18\x12\x1f\n\x1bk_EClanInGameChallengeEvent\x10\x19\x12\x1d\n\x19k_EClanInGameContestEvent\x10\x1a\x12\x13\n\x0fk_EClanIRLEvent\x10\x1b\x12\x14\n\x10k_EClanNewsEvent\x10\x1c\x12\x1b\n\x17k_EClanBetaReleaseEvent\x10\x1d\x12$\n k_EClanInGameContentReleaseEvent\x10\x1e\x12\x14\n\x10k_EClanFreeTrial\x10\x1f\x12\x18\n\x14k_EClanSeasonRelease\x10 \x12\x17\n\x13k_EClanSeasonUpdate\x10!\x12\x19\n\x15k_EClanCrosspostEvent\x10\"\x12\x1d\n\x19k_EClanInGameEventGeneral\x10#*\x81\x01\n\x1cPartnerEventNotificationType\x12\x11\n\rk_EEventStart\x10\x00\x12\x1a\n\x16k_EEventBroadcastStart\x10\x01\x12\x16\n\x12k_EEventMatchStart\x10\x02\x12\x1a\n\x16k_EEventPartnerMaxType\x10\x03:A\n\x12msgpool_soft_limit\x12\x1f.google.protobuf.MessageOptions\x18\xd0\x86\x03 \x01(\x05:\x02\x33\x32:B\n\x12msgpool_hard_limit\x12\x1f.google.protobuf.MessageOptions\x18\xd1\x86\x03 \x01(\x05:\x03\x33\x38\x34:C\n\x14\x66orce_php_generation\x12\x1c.google.protobuf.FileOptions\x18\xd0\x86\x03 \x01(\x08:\x05\x66\x61lse:H\n\x18php_output_always_number\x12\x1d.google.protobuf.FieldOptions\x18\xe4\x86\x03 \x01(\x08:\x05\x66\x61lse:J\n\x1a\x61llow_field_named_steam_id\x12\x1d.google.protobuf.FieldOptions\x18\xe8\x86\x03 \x01(\x08:\x05\x66\x61lseB\tH\x01\x90\x01\x01\x80\xb5\x18\x01')

_EBANCONTENTCHECKRESULT = DESCRIPTOR.enum_types_by_name['EBanContentCheckResult']
EBanContentCheckResult = enum_type_wrapper.EnumTypeWrapper(_EBANCONTENTCHECKRESULT)
_EPROTOCLANEVENTTYPE = DESCRIPTOR.enum_types_by_name['EProtoClanEventType']
EProtoClanEventType = enum_type_wrapper.EnumTypeWrapper(_EPROTOCLANEVENTTYPE)
_PARTNEREVENTNOTIFICATIONTYPE = DESCRIPTOR.enum_types_by_name['PartnerEventNotificationType']
PartnerEventNotificationType = enum_type_wrapper.EnumTypeWrapper(_PARTNEREVENTNOTIFICATIONTYPE)
k_EBanContentCheckResult_NotScanned = 0
k_EBanContentCheckResult_Reset = 1
k_EBanContentCheckResult_NeedsChecking = 2
k_EBanContentCheckResult_VeryUnlikely = 5
k_EBanContentCheckResult_Unlikely = 30
k_EBanContentCheckResult_Possible = 50
k_EBanContentCheckResult_Likely = 75
k_EBanContentCheckResult_VeryLikely = 100
k_EClanOtherEvent = 1
k_EClanGameEvent = 2
k_EClanPartyEvent = 3
k_EClanMeetingEvent = 4
k_EClanSpecialCauseEvent = 5
k_EClanMusicAndArtsEvent = 6
k_EClanSportsEvent = 7
k_EClanTripEvent = 8
k_EClanChatEvent = 9
k_EClanGameReleaseEvent = 10
k_EClanBroadcastEvent = 11
k_EClanSmallUpdateEvent = 12
k_EClanPreAnnounceMajorUpdateEvent = 13
k_EClanMajorUpdateEvent = 14
k_EClanDLCReleaseEvent = 15
k_EClanFutureReleaseEvent = 16
k_EClanESportTournamentStreamEvent = 17
k_EClanDevStreamEvent = 18
k_EClanFamousStreamEvent = 19
k_EClanGameSalesEvent = 20
k_EClanGameItemSalesEvent = 21
k_EClanInGameBonusXPEvent = 22
k_EClanInGameLootEvent = 23
k_EClanInGamePerksEvent = 24
k_EClanInGameChallengeEvent = 25
k_EClanInGameContestEvent = 26
k_EClanIRLEvent = 27
k_EClanNewsEvent = 28
k_EClanBetaReleaseEvent = 29
k_EClanInGameContentReleaseEvent = 30
k_EClanFreeTrial = 31
k_EClanSeasonRelease = 32
k_EClanSeasonUpdate = 33
k_EClanCrosspostEvent = 34
k_EClanInGameEventGeneral = 35
k_EEventStart = 0
k_EEventBroadcastStart = 1
k_EEventMatchStart = 2
k_EEventPartnerMaxType = 3

MSGPOOL_SOFT_LIMIT_FIELD_NUMBER = 50000
msgpool_soft_limit = DESCRIPTOR.extensions_by_name['msgpool_soft_limit']
MSGPOOL_HARD_LIMIT_FIELD_NUMBER = 50001
msgpool_hard_limit = DESCRIPTOR.extensions_by_name['msgpool_hard_limit']
FORCE_PHP_GENERATION_FIELD_NUMBER = 50000
force_php_generation = DESCRIPTOR.extensions_by_name['force_php_generation']
PHP_OUTPUT_ALWAYS_NUMBER_FIELD_NUMBER = 50020
php_output_always_number = DESCRIPTOR.extensions_by_name['php_output_always_number']
ALLOW_FIELD_NAMED_STEAM_ID_FIELD_NUMBER = 50024
allow_field_named_steam_id = DESCRIPTOR.extensions_by_name['allow_field_named_steam_id']

_CMSGIPADDRESS = DESCRIPTOR.message_types_by_name['CMsgIPAddress']
_CMSGIPADDRESSBUCKET = DESCRIPTOR.message_types_by_name['CMsgIPAddressBucket']
_CMSGGCROUTINGPROTOBUFHEADER = DESCRIPTOR.message_types_by_name['CMsgGCRoutingProtoBufHeader']
_CMSGPROTOBUFHEADER = DESCRIPTOR.message_types_by_name['CMsgProtoBufHeader']
_CMSGMULTI = DESCRIPTOR.message_types_by_name['CMsgMulti']
_CMSGPROTOBUFWRAPPED = DESCRIPTOR.message_types_by_name['CMsgProtobufWrapped']
_CMSGAUTHTICKET = DESCRIPTOR.message_types_by_name['CMsgAuthTicket']
_CCDDBAPPDETAILCOMMON = DESCRIPTOR.message_types_by_name['CCDDBAppDetailCommon']
_CMSGAPPRIGHTS = DESCRIPTOR.message_types_by_name['CMsgAppRights']
_CCURATORPREFERENCES = DESCRIPTOR.message_types_by_name['CCuratorPreferences']
_CLOCALIZATIONTOKEN = DESCRIPTOR.message_types_by_name['CLocalizationToken']
_CCLANEVENTUSERNEWSTUPLE = DESCRIPTOR.message_types_by_name['CClanEventUserNewsTuple']
_CCLANMATCHEVENTBYRANGE = DESCRIPTOR.message_types_by_name['CClanMatchEventByRange']
_CCOMMUNITY_CLANANNOUNCEMENTINFO = DESCRIPTOR.message_types_by_name['CCommunity_ClanAnnouncementInfo']
_CCLANEVENTDATA = DESCRIPTOR.message_types_by_name['CClanEventData']
_CBILLING_ADDRESS = DESCRIPTOR.message_types_by_name['CBilling_Address']
_CPACKAGERESERVATIONSTATUS = DESCRIPTOR.message_types_by_name['CPackageReservationStatus']
_CMSGKEYVALUEPAIR = DESCRIPTOR.message_types_by_name['CMsgKeyValuePair']
_CMSGKEYVALUESET = DESCRIPTOR.message_types_by_name['CMsgKeyValueSet']
_USERCONTENTDESCRIPTORPREFERENCES = DESCRIPTOR.message_types_by_name['UserContentDescriptorPreferences']
_USERCONTENTDESCRIPTORPREFERENCES_CONTENTDESCRIPTOR = _USERCONTENTDESCRIPTORPREFERENCES.nested_types_by_name['ContentDescriptor']
_CMSGPROTOBUFHEADER_ESESSIONDISPOSITION = _CMSGPROTOBUFHEADER.enum_types_by_name['ESessionDisposition']
CMsgIPAddress = _reflection.GeneratedProtocolMessageType('CMsgIPAddress', (_message.Message,), {
  'DESCRIPTOR' : _CMSGIPADDRESS,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgIPAddress)
  })
_sym_db.RegisterMessage(CMsgIPAddress)

CMsgIPAddressBucket = _reflection.GeneratedProtocolMessageType('CMsgIPAddressBucket', (_message.Message,), {
  'DESCRIPTOR' : _CMSGIPADDRESSBUCKET,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgIPAddressBucket)
  })
_sym_db.RegisterMessage(CMsgIPAddressBucket)

CMsgGCRoutingProtoBufHeader = _reflection.GeneratedProtocolMessageType('CMsgGCRoutingProtoBufHeader', (_message.Message,), {
  'DESCRIPTOR' : _CMSGGCROUTINGPROTOBUFHEADER,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgGCRoutingProtoBufHeader)
  })
_sym_db.RegisterMessage(CMsgGCRoutingProtoBufHeader)

CMsgProtoBufHeader = _reflection.GeneratedProtocolMessageType('CMsgProtoBufHeader', (_message.Message,), {
  'DESCRIPTOR' : _CMSGPROTOBUFHEADER,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgProtoBufHeader)
  })
_sym_db.RegisterMessage(CMsgProtoBufHeader)

CMsgMulti = _reflection.GeneratedProtocolMessageType('CMsgMulti', (_message.Message,), {
  'DESCRIPTOR' : _CMSGMULTI,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgMulti)
  })
_sym_db.RegisterMessage(CMsgMulti)

CMsgProtobufWrapped = _reflection.GeneratedProtocolMessageType('CMsgProtobufWrapped', (_message.Message,), {
  'DESCRIPTOR' : _CMSGPROTOBUFWRAPPED,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgProtobufWrapped)
  })
_sym_db.RegisterMessage(CMsgProtobufWrapped)

CMsgAuthTicket = _reflection.GeneratedProtocolMessageType('CMsgAuthTicket', (_message.Message,), {
  'DESCRIPTOR' : _CMSGAUTHTICKET,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgAuthTicket)
  })
_sym_db.RegisterMessage(CMsgAuthTicket)

CCDDBAppDetailCommon = _reflection.GeneratedProtocolMessageType('CCDDBAppDetailCommon', (_message.Message,), {
  'DESCRIPTOR' : _CCDDBAPPDETAILCOMMON,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CCDDBAppDetailCommon)
  })
_sym_db.RegisterMessage(CCDDBAppDetailCommon)

CMsgAppRights = _reflection.GeneratedProtocolMessageType('CMsgAppRights', (_message.Message,), {
  'DESCRIPTOR' : _CMSGAPPRIGHTS,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgAppRights)
  })
_sym_db.RegisterMessage(CMsgAppRights)

CCuratorPreferences = _reflection.GeneratedProtocolMessageType('CCuratorPreferences', (_message.Message,), {
  'DESCRIPTOR' : _CCURATORPREFERENCES,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CCuratorPreferences)
  })
_sym_db.RegisterMessage(CCuratorPreferences)

CLocalizationToken = _reflection.GeneratedProtocolMessageType('CLocalizationToken', (_message.Message,), {
  'DESCRIPTOR' : _CLOCALIZATIONTOKEN,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CLocalizationToken)
  })
_sym_db.RegisterMessage(CLocalizationToken)

CClanEventUserNewsTuple = _reflection.GeneratedProtocolMessageType('CClanEventUserNewsTuple', (_message.Message,), {
  'DESCRIPTOR' : _CCLANEVENTUSERNEWSTUPLE,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CClanEventUserNewsTuple)
  })
_sym_db.RegisterMessage(CClanEventUserNewsTuple)

CClanMatchEventByRange = _reflection.GeneratedProtocolMessageType('CClanMatchEventByRange', (_message.Message,), {
  'DESCRIPTOR' : _CCLANMATCHEVENTBYRANGE,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CClanMatchEventByRange)
  })
_sym_db.RegisterMessage(CClanMatchEventByRange)

CCommunity_ClanAnnouncementInfo = _reflection.GeneratedProtocolMessageType('CCommunity_ClanAnnouncementInfo', (_message.Message,), {
  'DESCRIPTOR' : _CCOMMUNITY_CLANANNOUNCEMENTINFO,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CCommunity_ClanAnnouncementInfo)
  })
_sym_db.RegisterMessage(CCommunity_ClanAnnouncementInfo)

CClanEventData = _reflection.GeneratedProtocolMessageType('CClanEventData', (_message.Message,), {
  'DESCRIPTOR' : _CCLANEVENTDATA,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CClanEventData)
  })
_sym_db.RegisterMessage(CClanEventData)

CBilling_Address = _reflection.GeneratedProtocolMessageType('CBilling_Address', (_message.Message,), {
  'DESCRIPTOR' : _CBILLING_ADDRESS,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CBilling_Address)
  })
_sym_db.RegisterMessage(CBilling_Address)

CPackageReservationStatus = _reflection.GeneratedProtocolMessageType('CPackageReservationStatus', (_message.Message,), {
  'DESCRIPTOR' : _CPACKAGERESERVATIONSTATUS,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CPackageReservationStatus)
  })
_sym_db.RegisterMessage(CPackageReservationStatus)

CMsgKeyValuePair = _reflection.GeneratedProtocolMessageType('CMsgKeyValuePair', (_message.Message,), {
  'DESCRIPTOR' : _CMSGKEYVALUEPAIR,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgKeyValuePair)
  })
_sym_db.RegisterMessage(CMsgKeyValuePair)

CMsgKeyValueSet = _reflection.GeneratedProtocolMessageType('CMsgKeyValueSet', (_message.Message,), {
  'DESCRIPTOR' : _CMSGKEYVALUESET,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:CMsgKeyValueSet)
  })
_sym_db.RegisterMessage(CMsgKeyValueSet)

UserContentDescriptorPreferences = _reflection.GeneratedProtocolMessageType('UserContentDescriptorPreferences', (_message.Message,), {

  'ContentDescriptor' : _reflection.GeneratedProtocolMessageType('ContentDescriptor', (_message.Message,), {
    'DESCRIPTOR' : _USERCONTENTDESCRIPTORPREFERENCES_CONTENTDESCRIPTOR,
    '__module__' : 'steammessages_base_pb2'
    # @@protoc_insertion_point(class_scope:UserContentDescriptorPreferences.ContentDescriptor)
    })
  ,
  'DESCRIPTOR' : _USERCONTENTDESCRIPTORPREFERENCES,
  '__module__' : 'steammessages_base_pb2'
  # @@protoc_insertion_point(class_scope:UserContentDescriptorPreferences)
  })
_sym_db.RegisterMessage(UserContentDescriptorPreferences)
_sym_db.RegisterMessage(UserContentDescriptorPreferences.ContentDescriptor)

if _descriptor._USE_C_DESCRIPTORS == False:
  google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(msgpool_soft_limit)
  google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(msgpool_hard_limit)
  google_dot_protobuf_dot_descriptor__pb2.FileOptions.RegisterExtension(force_php_generation)
  google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(php_output_always_number)
  google_dot_protobuf_dot_descriptor__pb2.FieldOptions.RegisterExtension(allow_field_named_steam_id)

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'H\001\220\001\001\200\265\030\001'
  _EBANCONTENTCHECKRESULT._serialized_start=5156
  _EBANCONTENTCHECKRESULT._serialized_end=5500
  _EPROTOCLANEVENTTYPE._serialized_start=5503
  _EPROTOCLANEVENTTYPE._serialized_end=6506
  _PARTNEREVENTNOTIFICATIONTYPE._serialized_start=6509
  _PARTNEREVENTNOTIFICATIONTYPE._serialized_end=6638
  _CMSGIPADDRESS._serialized_start=62
  _CMSGIPADDRESS._serialized_end=111
  _CMSGIPADDRESSBUCKET._serialized_start=113
  _CMSGIPADDRESSBUCKET._serialized_end=195
  _CMSGGCROUTINGPROTOBUFHEADER._serialized_start=197
  _CMSGGCROUTINGPROTOBUFHEADER._serialized_end=276
  _CMSGPROTOBUFHEADER._serialized_start=279
  _CMSGPROTOBUFHEADER._serialized_end=1293
  _CMSGPROTOBUFHEADER_ESESSIONDISPOSITION._serialized_start=1191
  _CMSGPROTOBUFHEADER_ESESSIONDISPOSITION._serialized_end=1282
  _CMSGMULTI._serialized_start=1295
  _CMSGMULTI._serialized_end=1351
  _CMSGPROTOBUFWRAPPED._serialized_start=1353
  _CMSGPROTOBUFWRAPPED._serialized_end=1396
  _CMSGAUTHTICKET._serialized_start=1399
  _CMSGAUTHTICKET._serialized_end=1586
  _CCDDBAPPDETAILCOMMON._serialized_start=1589
  _CCDDBAPPDETAILCOMMON._serialized_end=1952
  _CMSGAPPRIGHTS._serialized_start=1955
  _CMSGAPPRIGHTS._serialized_end=2390
  _CCURATORPREFERENCES._serialized_start=2393
  _CCURATORPREFERENCES._serialized_end=2762
  _CLOCALIZATIONTOKEN._serialized_start=2764
  _CLOCALIZATIONTOKEN._serialized_end=2828
  _CCLANEVENTUSERNEWSTUPLE._serialized_start=2831
  _CCLANEVENTUSERNEWSTUPLE._serialized_end=3067
  _CCLANMATCHEVENTBYRANGE._serialized_start=3070
  _CCLANMATCHEVENTBYRANGE._serialized_end=3198
  _CCOMMUNITY_CLANANNOUNCEMENTINFO._serialized_start=3201
  _CCOMMUNITY_CLANANNOUNCEMENTINFO._serialized_end=3612
  _CCLANEVENTDATA._serialized_start=3615
  _CCLANEVENTDATA._serialized_end=4421
  _CBILLING_ADDRESS._serialized_start=4424
  _CBILLING_ADDRESS._serialized_end=4623
  _CPACKAGERESERVATIONSTATUS._serialized_start=4626
  _CPACKAGERESERVATIONSTATUS._serialized_end=4845
  _CMSGKEYVALUEPAIR._serialized_start=4847
  _CMSGKEYVALUEPAIR._serialized_end=4894
  _CMSGKEYVALUESET._serialized_start=4896
  _CMSGKEYVALUESET._serialized_end=4947
  _USERCONTENTDESCRIPTORPREFERENCES._serialized_start=4950
  _USERCONTENTDESCRIPTORPREFERENCES._serialized_end=5153
  _USERCONTENTDESCRIPTORPREFERENCES_CONTENTDESCRIPTOR._serialized_start=5079
  _USERCONTENTDESCRIPTORPREFERENCES_CONTENTDESCRIPTOR._serialized_end=5153
# @@protoc_insertion_point(module_scope)
